# <auto-generated>
#     This code was generated by GenerateRequestCmdlets.ps1 (version 1.0.0) on 2025-10-30T07:26:36.1115158+00:00.
#     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
# </auto-generated>

Describe 'Invoke-DataverseCancelContract' -Tag 'SDK' {

    BeforeAll {
        $script:conn = getMockConnection
    }

    It 'Executes successfully with Default parameter set and validates input conversions' {
        # Setup test parameters with known values
        $testContractId = [Guid]::Parse('12345678-1234-1234-1234-123456789012')

        # Execute the cmdlet - wrap in try-catch for FakeXrmEasy unsupported requests
        $result = try {
            Invoke-DataverseCancelContract -Connection $script:conn -ContractId $testContractId
        } catch {
            # If FakeXrmEasy doesn't support this request, create a mock response
            if ($_.Exception.Message -match 'not been implemented|NotImplementedException|not yet supported|OpenSourceUnsupportedException') {
                # Create a mock response object of the expected type
                Write-Verbose "FakeXrmEasy does not support CancelContractRequest, using mock response"
                $mockResponse = New-Object Microsoft.Crm.Sdk.Messages.CancelContractResponse
                $mockResponse
            } else {
                throw
            }
        }

        # Assert response is returned and is correct type
        $result | Should -Not -BeNull
        $result.GetType().FullName | Should -Match 'OrganizationResponse|CancelContract'

        # Test input parameter conversions (basic smoke test that parameters were accepted)
    }

    It 'Supports -WhatIf parameter' {
        # Setup test parameters with known values
        $testContractId = [Guid]::Parse('12345678-1234-1234-1234-123456789012')

        $result = Invoke-DataverseCancelContract -Connection $script:conn -ContractId $testContractId -WhatIf
        # WhatIf should not return a result
        $result | Should -BeNullOrEmpty
    }
}
