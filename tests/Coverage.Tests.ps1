. $PSScriptRoot/Common.ps1

Describe "Coverage Report Generation" {
    
    It "Generate-CoverageReport.ps1 script exists and is executable" {
        $scriptPath = "$PSScriptRoot/../scripts/Generate-CoverageReport.ps1"
        Test-Path $scriptPath | Should -Be $true
    }
    
    It "Post-CoverageComment.ps1 script exists and is executable" {
        $scriptPath = "$PSScriptRoot/../scripts/Post-CoverageComment.ps1"
        Test-Path $scriptPath | Should -Be $true
    }
    
    It "Coverage report markdown format is valid when it exists" {
        $reportPath = "$PSScriptRoot/../coverage/coverage-report.md"
        
        # Only validate if the report exists (it may be generated by CI)
        if (Test-Path $reportPath) {
            $reportContent = Get-Content $reportPath -Raw
            $reportContent | Should -Match "# Code Coverage Report"
            $reportContent | Should -Match "## Summary"
            $reportContent | Should -Match "Total Cmdlets"
        }
    }
    
    It "Coverage scripts have proper PowerShell syntax" {
        # Validate Generate-CoverageReport.ps1 syntax
        $script1 = "$PSScriptRoot/../scripts/Generate-CoverageReport.ps1"
        $errors = $null
        $null = [System.Management.Automation.PSParser]::Tokenize((Get-Content $script1 -Raw), [ref]$errors)
        $errors.Count | Should -Be 0
        
        # Validate Post-CoverageComment.ps1 syntax
        $script2 = "$PSScriptRoot/../scripts/Post-CoverageComment.ps1"
        $errors = $null
        $null = [System.Management.Automation.PSParser]::Tokenize((Get-Content $script2 -Raw), [ref]$errors)
        $errors.Count | Should -Be 0
    }
}
