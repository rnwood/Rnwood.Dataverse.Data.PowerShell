// <auto-generated>
//     This code was generated by GenerateRequestCmdlets.ps1 (version 1.0.0) on 2025-10-04T16:01:19.2566597+01:00.
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>

#pragma warning disable CS1591 // Missing XML comment for publicly visible type or member

using System;
using System.Text;
using System.Management.Automation;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.PowerPlatform.Dataverse.Client;
using Rnwood.Dataverse.Data.PowerShell.Commands;
using Microsoft.Xrm.Sdk.Metadata;
using System.Collections;

namespace Rnwood.Dataverse.Data.PowerShell.Commands.Sdk
{
    /// <summary>
    /// Contains the data that is needed to retrieve pages of posts, including comments for each post, for a specified record.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("GenerateRequestCmdlets.ps1", "1.0.0")]
    [System.Diagnostics.DebuggerNonUserCode]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [Cmdlet("Invoke", "DataverseRetrieveRecordWall", SupportsShouldProcess = true, ConfirmImpact = ConfirmImpact.Medium)]
    public class InvokeDataverseRetrieveRecordWallCmdlet : OrganizationServiceCmdlet
    {
                /// <summary>

        

        

                /// <summary>
        /// Gets or sets the duplicate rule that you want updated. Required. Accepts PSObject with properties that will be converted to Entity. Use corresponding TableName parameter to specify the entity type. Accepts PSObject with properties that will be converted to Entity. Use corresponding TableName parameter to specify the entity type. Accepts PSObject with properties that will be converted to Entity. Use corresponding TableName parameter to specify the entity type. Accepts PSObject with Id and TableName/EntityName/LogicalName properties, or a string containing the entity name for lookup by name.
        /// </summary>

        [Parameter(HelpMessage = "Gets or sets the duplicate rule that you want updated. Required. Accepts PSObject with properties that will be converted to Entity. Use corresponding TableName parameter to specify the entity type. Accepts PSObject with properties that will be converted to Entity. Use corresponding TableName parameter to specify the entity type. Accepts PSObject with properties that will be converted to Entity. Use corresponding TableName parameter to specify the entity type. Accepts PSObject with Id and TableName/EntityName/LogicalName properties, or a string containing the entity name for lookup by name.")]
        public PSObject Entity { get; set; }

        /// <summary>
        /// Gets or sets the page number in the source file. Required.
        /// </summary>

        [Parameter(HelpMessage = "Gets or sets the page number in the source file. Required.")]
        public System.Int32 PageNumber { get; set; }

        /// <summary>
        /// Gets or sets, for retrieval, the number of posts per page. Required.
        /// </summary>

        [Parameter(HelpMessage = "Gets or sets, for retrieval, the number of posts per page. Required.")]
        public System.Int32 PageSize { get; set; }

        /// <summary>
        /// Gets or sets, for retrieval, the number of comments per post. Required.
        /// </summary>

        [Parameter(HelpMessage = "Gets or sets, for retrieval, the number of comments per post. Required.")]
        public System.Int32 CommentsPerPost { get; set; }

        /// <summary>
        /// Gets or sets the start date of the range in UTC.
        /// </summary>

        [Parameter(HelpMessage = "Gets or sets the start date of the range in UTC.")]
        public System.DateTime StartDate { get; set; }

        /// <summary>
        /// Gets or sets the end date and time. Required.
        /// </summary>

        [Parameter(HelpMessage = "Gets or sets the end date and time. Required.")]
        public System.DateTime EndDate { get; set; }

        /// <summary>
        /// Gets or sets a value that specifies the change type.
        /// </summary>

        [Parameter(HelpMessage = "Gets or sets a value that specifies the change type.")]
        public Microsoft.Xrm.Sdk.OptionSetValue Type { get; set; }

        /// <summary>
        /// For internal use only. Accepts PSObject with Id and TableName/EntityName/LogicalName properties, or a string containing the entity name for lookup by name. Accepts PSObject with Id and TableName/EntityName/LogicalName properties, or a string containing the entity name for lookup by name. Accepts PSObject with Id and TableName/EntityName/LogicalName properties, or a string containing the entity name for lookup by name.
        /// </summary>

        [Parameter(HelpMessage = "For internal use only. Accepts PSObject with Id and TableName/EntityName/LogicalName properties, or a string containing the entity name for lookup by name. Accepts PSObject with Id and TableName/EntityName/LogicalName properties, or a string containing the entity name for lookup by name. Accepts PSObject with Id and TableName/EntityName/LogicalName properties, or a string containing the entity name for lookup by name.")]
        public Microsoft.Xrm.Sdk.OptionSetValue Source { get; set; }

        /// <summary>
        /// Gets or sets the SortDirection for the request.
        /// </summary>

        [Parameter(HelpMessage = "Gets or sets the SortDirection for the request.")]
        public System.Boolean SortDirection { get; set; }

        /// <summary>
        /// Gets or sets the Keyword for the request.
        /// </summary>

        [Parameter(HelpMessage = "Gets or sets the Keyword for the request.")]
        public System.String Keyword { get; set; }

                /// <summary>
        /// Processes the cmdlet request and writes the response to the pipeline.
        /// </summary>
        protected override void ProcessRecord()
        {
            base.ProcessRecord();

            var request = new Microsoft.Crm.Sdk.Messages.RetrieveRecordWallRequest();
                        request.Entity = DataverseEntityConverter.ConvertPSObjectToEntityReference(Entity);
            request.PageNumber = PageNumber;
            request.PageSize = PageSize;
            request.CommentsPerPost = CommentsPerPost;
            request.StartDate = StartDate;
            request.EndDate = EndDate;
            request.Type = Type;
            request.Source = Source;
            request.SortDirection = SortDirection;
            request.Keyword = Keyword;

            // Build a short serialized summary of the request for ShouldProcess output
            var requestSummary = new StringBuilder();
            try
            {
                var props = request.GetType().GetProperties(System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.Instance);
                foreach (var p in props)
                {
                    object val = null;
                    try { val = p.GetValue(request); } catch { val = null; }
                    var vstr = val == null ? "null" : val.ToString();
                    requestSummary.Append(p.Name).Append("=").Append(vstr).Append("; ");
                }
            }
            catch
            {
                // Ignore any errors while serializing the request for what-if messaging
            }

            // Emit verbose output of the serialized request when -Verbose is used
            try { WriteVerbose(requestSummary.ToString()); } catch { }

            // Support -WhatIf and -Confirm; include request summary in the action description
            if (!ShouldProcess(request.GetType().Name, requestSummary.ToString()))
            {
                return;
            }

            var response = Connection.Execute(request);
            WriteObject(response);
        }
    }
}

#pragma warning restore CS1591
